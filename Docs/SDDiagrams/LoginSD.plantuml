@startuml Login SD

actor User
participant UserController
participant UserManager
participant UserProvider
participant TokenManager
participant UserLocationManager
participant Security

User->UserController: Login (email, password)
UserController->UserManager: Login (email, password)
UserManager->UserLocationManager: Check if ip is blocked (ipadress)
UserLocationManager->UserManager: Returns whether ip is block

alt Ip blocked
UserManager->UserController: Forbidden
UserController->User: Forbidden
end

UserManager->UserProvider: Get user by email(email)
UserProvider->UserManager: Return User


alt User not found

UserManager->UserController: Login failed
UserController->User: Login failed

end

alt User is locked

UserManager->UserController: Account locked
UserController->User: Account locked

end

UserManager->Security: Hash password (password, salt)
UserManager->UserManager: Check if salted password matches user password

alt Password does not match

UserManager->UserController: Login failed
UserController->User: Login failed

end


UserManager->UserLocationManager: Check if user has been logged in from ip (ip, userid)
UserLocationManager->UserManager: Returns whether user has been logged in from ip

alt Has not been logged in

UserManager->UserController: Forbidden
UserController->User: Forbidden

end

UserManager->UserController: Returns User
UserController->TokenManager: Get token for user (User)
TokenManager->UserController: Returns Token

UserController->User: Return token

@enduml