@startuml Login SD

skinparam sequence {
    GroupBorderColor red
    GroupBorderThickness 1

    ArrowColor orangered

    LifeLineBorderColor blue

    ParticipantBackgroundColor lightblue
}

actor User
participant UserController
participant UserManager
participant UserProvider
participant TokenManager
participant UserLocationManager
participant Security

User->UserController: Login (email, password)
UserController->UserManager: Login (email, password)
UserManager->UserLocationManager: Check if ip is blocked (ipadress)
UserLocationManager-->UserManager: Returns whether ip is block

alt Ip blocked
UserManager-->UserController: Throw IpBlocked exception
UserController-->User: Return status forbidden
end

UserManager->UserProvider: Get user by email(email)
UserProvider->UserManager: Return User


alt User not found

UserManager->UserController: Login failed
UserController->User: Login failed

end

alt User is locked

UserManager-->UserController: Throw account locked exception
UserController-->User: Return status forbidden

end

UserManager->Security: Hash password (password, salt)
UserManager->UserManager: Check if salted password matches user password

alt Password does not match

UserManager->UserController: Login failed
UserController->User: Login failed

end


UserManager->UserLocationManager: Check if user has been logged in from ip (ip, userid)
UserLocationManager-->UserManager: Returns whether user has been logged in from ip

alt Has not been logged in from location before

UserManager-->UserController: Throw Required 2FA exception
UserController-->User: Return status forbidden
UserManager-->User: Sends verification code
User->UserController: Enters verification code
UserController->UserManager: VerificationLogin(email, verification code)
UserManager->UserManager: Check if verification matches
alt Verification does not match

UserManager->UserController: Login failed
UserController->User: Login failed

end
UserManager->UserController: Returns User
UserController->TokenManager: Get token for user (User)
TokenManager->UserController: Returns Token
UserController->User: Return token
end

UserManager->UserController: Returns User
UserController->TokenManager: Get token for user (User)
TokenManager->UserController: Returns Token

UserController->User: Return token

@enduml